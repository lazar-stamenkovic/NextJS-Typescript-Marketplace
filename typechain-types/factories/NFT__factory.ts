/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "marketplaceAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019763803806200197683398101604081905262000034916200016e565b604080518082018252601081526f4d657461766572736520546f6b656e7360801b6020808301918252835180850190945260048452631351551560e21b9084015281519192916200008891600091620000c8565b5080516200009e906001906020840190620000c8565b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550620001db565b828054620000d6906200019e565b90600052602060002090601f016020900481019282620000fa576000855562000145565b82601f106200011557805160ff191683800117855562000145565b8280016001018555821562000145579182015b828111156200014557825182559160200191906001019062000128565b506200015392915062000157565b5090565b5b8082111562000153576000815560010162000158565b60006020828403121562000180578081fd5b81516001600160a01b038116811462000197578182fd5b9392505050565b600181811c90821680620001b357607f821691505b60208210811415620001d557634e487b7160e01b600052602260045260246000fd5b50919050565b61178b80620001eb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde1461021b578063c87b56dd1461022e578063e985e9c514610241578063f5537ede1461027d57600080fd5b80636352211e146101da57806370a08231146101ed57806395d89b4114610200578063a22cb4651461020857600080fd5b806323b872dd116100d357806323b872dd1461018257806332a2c5d01461019557806342842e0e146101a657806345576f94146101b957600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b61011861011336600461143d565b610290565b60405190151581526020015b60405180910390f35b6101356102e2565b604051610124919061156b565b6101556101503660046114bb565b610374565b6040516001600160a01b039091168152602001610124565b61018061017b366004611414565b610401565b005b610180610190366004611326565b610517565b6008546001600160a01b0316610155565b6101806101b4366004611326565b610548565b6101cc6101c7366004611475565b610563565b604051908152602001610124565b6101556101e83660046114bb565b6105ab565b6101cc6101fb3660046112da565b610622565b6101356106a9565b6101806102163660046113da565b6106b8565b610180610229366004611361565b6106c7565b61013561023c3660046114bb565b6106ff565b61011861024f3660046112f4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018061028b366004611326565b610876565b60006001600160e01b031982166380ac58cd60e01b14806102c157506001600160e01b03198216635b5e139f60e01b145b806102dc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f190611690565b80601f016020809104026020016040519081016040528092919081815260200182805461031d90611690565b801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b5050505050905090565b600061037f826108df565b6103e55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061040c826105ab565b9050806001600160a01b0316836001600160a01b0316141561047a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103dc565b336001600160a01b03821614806104965750610496813361024f565b6105085760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103dc565b61051283836108fc565b505050565b610521338261096a565b61053d5760405162461bcd60e51b81526004016103dc906115d0565b610512838383610a50565b610512838383604051806020016040528060008152506106c7565b6000610573600780546001019055565b600061057e60075490565b905061058a3382610bf0565b6105948184610d23565b6008546102dc906001600160a01b031660016106b8565b6000818152600260205260408120546001600160a01b0316806102dc5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103dc565b60006001600160a01b03821661068d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103dc565b506001600160a01b031660009081526003602052604090205490565b6060600180546102f190611690565b6106c3338383610dae565b5050565b6106d1338361096a565b6106ed5760405162461bcd60e51b81526004016103dc906115d0565b6106f984848484610e7d565b50505050565b606061070a826108df565b6107705760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103dc565b6000828152600660205260408120805461078990611690565b80601f01602080910402602001604051908101604052809291908181526020018280546107b590611690565b80156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b50505050509050600061082060408051602081019091526000815290565b9050805160001415610833575092915050565b81511561086557808260405160200161084d9291906114ff565b60405160208183030381529060405292505050919050565b61086e84610eb0565b949350505050565b826001600160a01b0316610889826105ab565b6001600160a01b03161461053d5760405162461bcd60e51b815260206004820181905260248201527f46726f6d2061646472657373206d75737420626520746f6b656e206f776e657260448201526064016103dc565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610931826105ab565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610975826108df565b6109d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103dc565b60006109e1836105ab565b9050806001600160a01b0316846001600160a01b03161480610a1c5750836001600160a01b0316610a1184610374565b6001600160a01b0316145b8061086e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661086e565b826001600160a01b0316610a63826105ab565b6001600160a01b031614610acb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103dc565b6001600160a01b038216610b2d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103dc565b610b386000826108fc565b6001600160a01b0383166000908152600360205260408120805460019290610b6190849061164d565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b8f908490611621565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610c465760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103dc565b610c4f816108df565b15610c9c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103dc565b6001600160a01b0382166000908152600360205260408120805460019290610cc5908490611621565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610d2c826108df565b610d8f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103dc565b60008281526006602090815260409091208251610512928401906111af565b816001600160a01b0316836001600160a01b03161415610e105760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103dc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e88848484610a50565b610e9484848484610f88565b6106f95760405162461bcd60e51b81526004016103dc9061157e565b6060610ebb826108df565b610f1f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103dc565b6000610f3660408051602081019091526000815290565b90506000815111610f565760405180602001604052806000815250610f81565b80610f6084611095565b604051602001610f719291906114ff565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561108a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fcc90339089908890889060040161152e565b602060405180830381600087803b158015610fe657600080fd5b505af1925050508015611016575060408051601f3d908101601f1916820190925261101391810190611459565b60015b611070573d808015611044576040519150601f19603f3d011682016040523d82523d6000602084013e611049565b606091505b5080516110685760405162461bcd60e51b81526004016103dc9061157e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061086e565b506001949350505050565b6060816110b95750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110e357806110cd816116cb565b91506110dc9050600a83611639565b91506110bd565b60008167ffffffffffffffff81111561110c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611136576020820181803683370190505b5090505b841561086e5761114b60018361164d565b9150611158600a866116e6565b611163906030611621565b60f81b81838151811061118657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506111a8600a86611639565b945061113a565b8280546111bb90611690565b90600052602060002090601f0160209004810192826111dd5760008555611223565b82601f106111f657805160ff1916838001178555611223565b82800160010185558215611223579182015b82811115611223578251825591602001919060010190611208565b5061122f929150611233565b5090565b5b8082111561122f5760008155600101611234565b600067ffffffffffffffff8084111561126357611263611726565b604051601f8501601f19908116603f0116810190828211818310171561128b5761128b611726565b816040528093508581528686860111156112a457600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146112d557600080fd5b919050565b6000602082840312156112eb578081fd5b610f81826112be565b60008060408385031215611306578081fd5b61130f836112be565b915061131d602084016112be565b90509250929050565b60008060006060848603121561133a578081fd5b611343846112be565b9250611351602085016112be565b9150604084013590509250925092565b60008060008060808587031215611376578081fd5b61137f856112be565b935061138d602086016112be565b925060408501359150606085013567ffffffffffffffff8111156113af578182fd5b8501601f810187136113bf578182fd5b6113ce87823560208401611248565b91505092959194509250565b600080604083850312156113ec578182fd5b6113f5836112be565b915060208301358015158114611409578182fd5b809150509250929050565b60008060408385031215611426578182fd5b61142f836112be565b946020939093013593505050565b60006020828403121561144e578081fd5b8135610f818161173c565b60006020828403121561146a578081fd5b8151610f818161173c565b600060208284031215611486578081fd5b813567ffffffffffffffff81111561149c578182fd5b8201601f810184136114ac578182fd5b61086e84823560208401611248565b6000602082840312156114cc578081fd5b5035919050565b600081518084526114eb816020860160208601611664565b601f01601f19169290920160200192915050565b60008351611511818460208801611664565b835190830190611525818360208801611664565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611561908301846114d3565b9695505050505050565b602081526000610f8160208301846114d3565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611634576116346116fa565b500190565b60008261164857611648611710565b500490565b60008282101561165f5761165f6116fa565b500390565b60005b8381101561167f578181015183820152602001611667565b838111156106f95750506000910152565b600181811c908216806116a457607f821691505b602082108114156116c557634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116df576116df6116fa565b5060010190565b6000826116f5576116f5611710565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461175257600080fd5b5056fea2646970667358221220213a519d3187689235329dab5146ba072f8097a090f1647260fa2b3d1279fe6364736f6c63430008040033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    marketplaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFT> {
    return super.deploy(marketplaceAddress, overrides || {}) as Promise<NFT>;
  }
  getDeployTransaction(
    marketplaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(marketplaceAddress, overrides || {});
  }
  attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
